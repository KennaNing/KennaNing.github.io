<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KennaNing&#39;s Home on KennaNing&#39;s Home</title>
    <link>http://KennaNing.github.io/</link>
    <description>Recent content in KennaNing&#39;s Home on KennaNing&#39;s Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Jun 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>My brilliant friend</title>
      <link>http://KennaNing.github.io/2019/my-brelliant-friend/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://KennaNing.github.io/2019/my-brelliant-friend/</guid>
      <description>

&lt;h1 id=&#34;情绪背景&#34;&gt;情绪背景&lt;/h1&gt;

&lt;p&gt;毕业期的日子里，没有兴奋，快乐与期待。而是在这段日子里，对自己的无所事事感到空虚，焦虑；对工作还没有确定而感到彷徨和急切；对自己考研失败而懊恼，羞耻；对自己的未来充满疑惑。只是在一种盲目中坚信自己未来一定会更好，会成为自己喜欢的人，过自己喜欢的生活。&lt;/p&gt;

&lt;p&gt;蹉跎着这段即将走上分叉路口的时光，每天所做的事不过睡到日上三竿，寻找着消费时间的剧作，电影。渴望这段时间赶紧结束，迫不及待地想收到工作确定的电话，急切地想要踏上充实，充满挑战的生活。&lt;/p&gt;

&lt;h1 id=&#34;我的天才女友&#34;&gt;《我的天才女友》&lt;/h1&gt;

&lt;p&gt;在这段时间的阅历中，最喜欢的是killing eve 和 我的天才女友这两部剧，在这里想重点讲述一下后者。&lt;/p&gt;

&lt;p&gt;《我的天才女友》是意大利作家elina franto的《那不勒四部曲》的第一部。讲述了战后贫民窟的两个女孩从小时候的吸引与陪伴到走上不同人生道路的故事。整个故事以elina作为第一人称展开，lila是她故事的主角。elina是那种会讨人喜欢，让人觉得亲切，不会有恶意，产生距离的温和角色，她从小就刻苦学习，是那种班里的模范优秀生，她也乐此不疲的享受着被老师关注，照顾的感觉。直到有一天，老师发现了班上一位近似天才的学生，她感觉到属于自己的光芒正在逐渐丧失，她不喜欢这种感觉。同时，她也被这位天才女孩lila吸引，她不断的接近她，陪伴她。lila像是一个坚定的勇士，她清楚地知道自己想要什么，她敢于为自己反抗，她不畏强权，性格刚烈。她在很多方面富有天赋，她可以很容易的自学成才，她可以在12岁的时候设计出鞋子，她在这片社区里显得格格不入，她想要改变这里的环境。像lila这样的女孩，如果有机遇，有贵人相助，她大概会成为外交官，也许会成为商业女强人，各种各种可以走向人生巅峰的路，可是命运让人们对这位才女扼腕叹息。&lt;/p&gt;

&lt;p&gt;两个人在感情路上差异明显，几乎那片社区里所有的男生都喜欢lila，不论是同一个阶级，从小的玩伴，还是富甲一方的贵公子，他们都被lila吸引。谁也不知道是真心喜欢，会永远的疼爱她还是男生沉浸在自己追求对方的激情与感动中。相比之下，elina就显得平淡无奇，没有大把的男生喜欢她，就连自己喜欢的男生也是喜欢lila。&lt;/p&gt;

&lt;p&gt;然而真正影响这两位女孩命运的是家庭和教育。因为elina的爸爸思维相对长远，还是不断支持elina读书。而lila就相对没有那么幸运了，她曾经也为自己上学而据理力争过，可是换来的却是爸爸将她扔出门外。渐渐地，两者的人生便有了翻天覆地的变化，lila终其一生都在斗争，可她却没有逃离那里，一旦被原生家庭拖累，被婚姻束缚，那她的天赋也就没有用武之地了，她也就彻底变成了普通人，庶民。而elina，虽然平平淡淡，却最终不断通过教育逃离了那个地方，认识了新的阶层的人。&lt;/p&gt;

&lt;h1 id=&#34;引起共鸣的点&#34;&gt;引起共鸣的点&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;思想开明，有远见的父母是每一个被困于囚笼的人的救命草，他们让孩子不断的受教育九岁对他们最大的救赎&lt;/li&gt;
&lt;li&gt;女生之间的友谊就是希望你过的好，但不要比我好&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;疑惑&#34;&gt;疑惑&lt;/h1&gt;

&lt;p&gt;女生之间：我知道却没告诉你，是背叛；我没告诉你真实的想法，是欺骗&lt;/p&gt;

&lt;p&gt;我知道这是女生之间友谊的猫腻，当我相信每一个成长了的女性都会坦然面对这一事实，我们不可能把所有的想法都告诉对方，每个人都是一个独立的个体，她需要隐私，需要自己拥有一些别人不知道的，不想要自己赤裸裸的全部被人解读。&lt;/p&gt;

&lt;h1 id=&#34;感触&#34;&gt;感触&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;[] 再多的天赋也不如拥有一个好的家世，开明又有远见的父母&lt;/li&gt;
&lt;li&gt;[] 教育在任何时候都是不可或缺的。无聊乏味时，可以丰富自己狭隘的世界；最重要也最世俗的是教育是逃离原生世界，通往阶级晋升的绿卡&lt;/li&gt;
&lt;li&gt;[] 永远不要被家庭，婚姻所束缚&lt;/li&gt;
&lt;li&gt;[] 不要做一个平淡无奇的普通人，要永远开发自己新的属性&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>About frendship</title>
      <link>http://KennaNing.github.io/2019/frendship/</link>
      <pubDate>Sun, 21 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://KennaNing.github.io/2019/frendship/</guid>
      <description>

&lt;p&gt;There are some terrible things happened to me recently, so i have to learn and review what is a good friend and how to retain a worthy friendship. Also, they tell me again who is the one to be your friend and which one i should make friends in the future.&lt;/p&gt;

&lt;h1 id=&#34;six-signs-of-a-strong-frendship&#34;&gt;Six signs of a strong frendship&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[ trust ] True frendship is about trusting one another. While acquaintance or work colleagues may hide their shortcomings from you，a friend confides in you&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[ real ] They like you for the real you. As humans, we are never perfect. Whatever your thing is, a true friend likes you not despite it - but because that&amp;rsquo;s what makes you, you. They are not judgemental - they don&amp;rsquo;t come down harshly and critically on your weaknesses.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[ space ] They allow space for your freak-outs. When you get flustered,frustrated and can&amp;rsquo;t keep it together, a friend is there for you. &amp;ldquo;They don&amp;rsquo;t just flatter,they understand hoe easily we lose perspective,panic and underestimate our own ability ti cope,&amp;rdquo; de Botton explains.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[ beacon ] They are a beacon during moments when you lose your way. We get agitated or defensive, and we don&amp;rsquo;t really know why. We find it tricky to pin down our goals. We might have some strong opinious, but it can be difficult to explain really why these ideas matters to us.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[ encourage ] They remind you what you&amp;rsquo;re capable of. They see the potential in what we&amp;rsquo;re saying,when we can&amp;rsquo;t.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;quotes-on-friendship&#34;&gt;Quotes on friendship&lt;/h1&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Nothing makes the earth seem so spacious as to have friends at a distance, they make the latitudes and longitudes.&lt;/li&gt;
&lt;li&gt;Find a group of people who challenge and inspire you; spend a lot of time with them, and it&amp;rsquo;ll change your life.&lt;/li&gt;
&lt;li&gt;Anybody can sympathise with the sufferings of a friend, but it requires a very fine nature to spmpathise with a friend&amp;rsquo;s success.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t make friends who are comfortable to be with you. Make friends who will force you to lever yourself up&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Move some notes from JianShu</title>
      <link>http://KennaNing.github.io/2019/mv-jianshu/</link>
      <pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://KennaNing.github.io/2019/mv-jianshu/</guid>
      <description>

&lt;h1 id=&#34;tmux&#34;&gt;tmux&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;brew install tmux
tmux new -s demo   新建名为demo的session
tmux a -t demo     attach
tmux d             detache
tmux ls
ctrl_b_,           修改window name
ctrl_b_c           新建window
ctrl_d             退出
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;关于显卡&#34;&gt;关于显卡&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;nvidia-smi&lt;/code&gt;              查看显卡
&lt;code&gt;CUDA_VISIBLE_DEVICES=i&lt;/code&gt;   指定i显卡&lt;/p&gt;

&lt;h1 id=&#34;virtual-env&#34;&gt;virtual_env&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;#用python创建
python -m venv unet_venv
source public/Unet/unet_venv/bin/activate
deactivate
# 用conda创建(fish 和 conda 不兼容)
conda create -n unet_venv python=3.6   装在默认路径
conda create --prefix=public/NingFang/unet_venv python=3.6 
source activate /public/Unet/unet_venv
deactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;path&#34;&gt;path&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;vim ~/.config/fish/conf.d/xxx.fish
set PATH(你想要加的路径) PATH
重启fish
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;deb-package-install&#34;&gt;deb-package install&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;cd xxx/xxx/
sudo dpkg -i deb_filename
发生依赖性错误时-&amp;gt; sudo apt-get install -f
sudo dpkg -l    查看已安装的软件
sudo dpkg -r    卸载
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;shadowsocks&#34;&gt;shadowsocks&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;sudo service shadowsocks status
sudo service shadowsocks start
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Simple file operations</title>
      <link>http://KennaNing.github.io/2019/file-operations/</link>
      <pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://KennaNing.github.io/2019/file-operations/</guid>
      <description>

&lt;h1 id=&#34;os-listdir&#34;&gt;os.listdir()&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;data_dir=&#39;flower_photoes/&#39;
# 返回指定文件夹包含的文件和文件夹的列表
contents=os.listdir(data_dir)  
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Simple math notes</title>
      <link>http://KennaNing.github.io/2019/math_compute/</link>
      <pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://KennaNing.github.io/2019/math_compute/</guid>
      <description>

&lt;h1 id=&#34;np-mean&#34;&gt;np.mean()&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;matrix=[[1,2,3],[2,3,4],[3,4,5],[4,5,6]]
np.mean(matrix) -&amp;gt; 3.5                   对所有元素求均值
np.mean(matrix,0) -&amp;gt; [2.5,3.5,4.5]       对各列求均值,压缩行
np.mean(matrix,1) -&amp;gt; [[2],[3],[4],[5]]   对各行求均值，压缩列
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>About Principles</title>
      <link>http://KennaNing.github.io/2019/luxun/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://KennaNing.github.io/2019/luxun/</guid>
      <description>&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; 惟沉默是最高的轻蔑&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; 勇者愤怒，抽刀向更强者；怯者愤怒，却抽刃向更弱者&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; 从来如此，便对么？&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; 贪安稳就没有自由，要自由就要历些危险。自由这两条路&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;常与同好争高下，不与傻瓜论短长&lt;/p&gt;

&lt;p&gt;永远对自己深信不疑的事保持怀疑&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Build my blog with hugo</title>
      <link>http://KennaNing.github.io/2019/build-blog-with-hugo/</link>
      <pubDate>Thu, 04 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://KennaNing.github.io/2019/build-blog-with-hugo/</guid>
      <description>

&lt;p&gt;一直想找到自己喜欢的网站写自己的一些学习心得，试过onenote，简书等，onenote在linux上又只能用网页版，简书的层级布局略感粗糙，在搜寻了一阵之后，因缘巧合下得知hugo，恰好最近比较有空，就开始了又一次新的尝试。&lt;/p&gt;

&lt;h1 id=&#34;requirements&#34;&gt;requirements&lt;/h1&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Hugo&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; github&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; 有关git的基础知识&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;about-hugo&#34;&gt;About hugo&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt;是用静态语言实现的静态网站生成器。官网有详细的安装，主题模版介绍，因为其简单，易用，高效，易部署而渐渐受到很多人的青睐。&lt;/p&gt;

&lt;h2 id=&#34;install-hugo&#34;&gt;Install Hugo&lt;/h2&gt;

&lt;p&gt;环境：Mac&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;1. brew install hugo 
2. hugo version  #检查安装是否成功
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;creat-a-new-site&#34;&gt;Creat a new site&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;hugo new site blog  # 在blog文件夹下建一个网站
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;check-the-tree-categories&#34;&gt;check the tree categories&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;tree blog   # 如果你没有安装tree，则先 brew install tree
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;add-a-theme&#34;&gt;Add a theme&lt;/h2&gt;

&lt;p&gt;可以在&lt;a href=&#34;https://themes.gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://themes.gohugo.io/&lt;/a&gt;选择自己喜欢的主题，本文使用简洁美观的&lt;a href=&#34;https://github.com/liuzc/LeaveIt&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Leavelt themes&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;cd blog/themes
git init
git clone https://github.com/liuzc/LeaveIt.git
theme = &amp;quot;LeaveIt&amp;quot; # 打开config.toml 编辑文件中的theme或者使用 echo &#39;theme=“LeavIt” &#39; &amp;gt;&amp;gt; config.toml 实现相同功能
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;add-some-content&#34;&gt;Add some content&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;hugo new posts/my_first_post.md&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;可以打开文章编辑内容
---                    #文章顶部的meta信息
title: &amp;quot;My First Post&amp;quot;
date: 2017-12-14T11:18:15+08:00
weight: 70
keywords: [&amp;quot;hugo&amp;quot;]
description: &amp;quot;第一篇文章&amp;quot;
tags: [&amp;quot;hugo&amp;quot;, &amp;quot;pages&amp;quot;]
categories: [&amp;quot;pages&amp;quot;]
author: &amp;quot;&amp;quot;
---

这里是文章内容
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;start-the-hugo-server&#34;&gt;Start the hugo server&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;▶ hugo server -D


                   | EN
+------------------+----+
  Pages            | 10
  Paginator pages  |  0
  Non-page files   |  0
  Static files     |  3
  Processed images |  0
  Aliases          |  1
  Sitemaps         |  1
  Cleaned          |  0


Total in 11 ms
Watching for changes in /Users/bep/quickstart/{content,data,layouts,static,themes}
Watching for config changes in /Users/bep/quickstart/config.toml
Environment: &amp;quot;development&amp;quot;
Serving pages from memory
Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender
Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)
Press Ctrl+C to stop

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行命令后，可以访问 &lt;a href=&#34;http://localhost:1313/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://localhost:1313/&lt;/a&gt; 查看效果&lt;/p&gt;

&lt;h1 id=&#34;deploy-to-github-pages&#34;&gt;Deploy to GitHub Pages&lt;/h1&gt;

&lt;h2 id=&#34;github&#34;&gt;github&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;首先创建自己的guthub账号，创建两个repo，一个用来放源码repo，命名为blog，另一个用来准备发博客使用的pages repo&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将本地的源码repo提交到github的源码repo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;git add -A
git commit -m &amp;quot;initial all files&amp;quot;
git remote add github https://github.com/&amp;lt;username&amp;gt;/blog
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;创建&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; repo,详情可参照 &lt;a href=&#34;https://pages.github.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://pages.github.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将 config.toml 中的&lt;code&gt;baseURL&lt;/code&gt;设置为&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;生成&lt;a href=&#34;https://github.com/settings/tokens/new&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Github Acess Token&lt;/a&gt;,至少要有public_repo的权限&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;配置 Travis ：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;在&lt;a href=&#34;https://travis-ci.org/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Travis CI&lt;/a&gt;中关联自己的github账号，并激活blog repo&lt;/li&gt;
&lt;li&gt;在blog的设置页面，除了 LImit concurrent jobs，其他的都选择ON，并把刚生成的Github Access Token 添加到环境变量&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;的设置页面只需要将Github Access Token 添加到环境变量&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在blog repo 中添加 .travis.yml&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;sudo: false
language: go
git:
depth: 1
install: go get -v github.com/gohugoio/hugo
script:
$GOPATH/bin/hugo
deploy:
provider: pages
skip_cleanup: true
github_token: $GITHUB_TOKEN
on:
    branch: master
local_dir: public
repo: &amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io
fqdn: &amp;lt;custom-domain-if-needed&amp;gt;
target_branch: master
email: &amp;lt;github-email&amp;gt;
name: &amp;lt;github-username&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;参考 &lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://gohugo.io/getting-started/quick-start/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;参考 &lt;a href=&#34;https://segmentfault.com/a/1190000012975914&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://segmentfault.com/a/1190000012975914&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>About git</title>
      <link>http://KennaNing.github.io/2019/learn_git/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://KennaNing.github.io/2019/learn_git/</guid>
      <description>

&lt;h1 id=&#34;git-简介&#34;&gt;git 简介&lt;/h1&gt;

&lt;p&gt;目前世界上最先进的版本控制系统&lt;/p&gt;

&lt;h2 id=&#34;创建版本库&#34;&gt;创建版本库&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;ls -ah&lt;/code&gt; 可以看见隐藏的命令&lt;br /&gt;
初始化 git repo：&lt;code&gt;git init&lt;/code&gt;&lt;br /&gt;
添加文件到 git repo：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git add &amp;lt; file &amp;gt;&lt;/code&gt; 把文件添加到暂存区(stage)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;lt; message &amp;gt;&lt;/code&gt; 把 stage 中的所有内容提交到分支(branch)&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;时光穿梭机&#34;&gt;时光穿梭机&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;掌握工作区的状态：&lt;code&gt;git status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看修改内容：&lt;code&gt;git diff&lt;/code&gt; 退出（q）&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;版本回退&#34;&gt;版本回退&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;查看提交历史，确定回退到哪个版本：&lt;code&gt;git log&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看命令历史，确定回到未来哪个版本：&lt;code&gt;git reflog&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;指向当前版本 &lt;code&gt;HEAD&lt;/code&gt;，指向上一百个版本： &lt;code&gt;HEAD -100&lt;/code&gt;  &lt;code&gt;git reset  --hard coommit_id&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;git-的管理修改&#34;&gt;git 的管理修改&lt;/h2&gt;

&lt;p&gt;git 跟踪并管理的是修改，并非文件，每次修改，如果不&lt;code&gt;git add&lt;/code&gt; 到stage，就不会加入到&lt;code&gt;commit&lt;/code&gt;中&lt;/p&gt;

&lt;h2 id=&#34;撤销修改&#34;&gt;撤销修改&lt;/h2&gt;

&lt;p&gt;incase you add stupid boss to your working directory,what you should do&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;还未 &lt;code&gt;git add&lt;/code&gt;：&lt;code&gt;git checkout --file&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;已 git add：&lt;code&gt;git reset HEAD &amp;lt;file&amp;gt;&lt;/code&gt; 回到第一步，按第一步操作&lt;/li&gt;
&lt;li&gt;已 &lt;code&gt;git commit&lt;/code&gt;:参考版本回退一节&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;删除文件&#34;&gt;删除文件&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;删错了，版本库中还有：&lt;code&gt;git checkout -- test.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;确定删掉：&lt;code&gt;git rm test.txt&lt;/code&gt; &amp;amp; &lt;code&gt;git commit -m &#39;remove test.txt&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;远程仓库&#34;&gt;远程仓库&lt;/h1&gt;

&lt;h2 id=&#34;添加远程仓库&#34;&gt;添加远程仓库&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;关联：&lt;code&gt;git remote add origin git@server-name:path/repo-name.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;push: &lt;code&gt;git push -u origin master&lt;/code&gt; or &lt;code&gt;git push origin master&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;从远程库克隆&#34;&gt;从远程库克隆&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;git clone git@github.com:michaelliao/gitskills.git&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;分支管理&#34;&gt;分支管理&lt;/h1&gt;

&lt;h2 id=&#34;创建与合并分支&#34;&gt;创建与合并分支&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;查看分支：&lt;code&gt;git branch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;创建分支：&lt;code&gt;git branch &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;切换分支：&lt;code&gt;git checkout &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;创建+切换分支：&lt;code&gt;git checkout -b &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;合并某分支到当前分支：&lt;code&gt;git merge &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除分支：&lt;code&gt;git branch -d &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;解决冲突&#34;&gt;解决冲突&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;当git无法自动合并分支时，必须首先手动解决confict，再 add，commit。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git log --graph&lt;/code&gt;可以看到分支合并图&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;分支管理策略&#34;&gt;分支管理策略&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;实际开发中，&lt;code&gt;master&lt;/code&gt;仅用来发布新版本，不能在上面干活，干活都在&lt;code&gt;dev&lt;/code&gt;分支上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git merge --no-ff&lt;/code&gt;表示用普通模式合并，即能看出来曾经做过合并&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;bug分支&#34;&gt;Bug分支&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;master有bug，但是目前仍在dev：将dev刚写的部分代码stash&lt;code&gt;git stash&lt;/code&gt;，以dev分支为基础创建issue-101，debug后，merge到master,删掉&lt;code&gt;issue-101&lt;/code&gt;分支&lt;/li&gt;
&lt;li&gt;回到dev，继续干活&lt;code&gt;git stash pop&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;feature-分支&#34;&gt;feature 分支&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;添加新功能，创建新分支：&lt;code&gt;git checkout -b feature-vulcan&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;丢弃一个未合并的分支：&lt;code&gt;git branch -D &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;多人协作&#34;&gt;多人协作&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;查看远程库信息：&lt;code&gt;git remote -v&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;从本地推送分支&lt;code&gt;git push origin branch-name&lt;/code&gt;，如果push失败，先&lt;code&gt;git pull&lt;/code&gt;，再提交&lt;/li&gt;
&lt;li&gt;在本地创建和远程对应的分支：&lt;code&gt;git checkout -b branch-name origin/branch-name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;建立本地分支和远程分支的关联：&lt;code&gt;git branch --set-upstream branch-name origin/branch-name&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;rebase&#34;&gt;Rebase&lt;/h2&gt;

&lt;p&gt;rebase操作把本地未push的分叉提交历史整理成直线，使得查看历史提交变化时更容易&lt;/p&gt;

&lt;h1 id=&#34;标签管理&#34;&gt;标签管理&lt;/h1&gt;

&lt;p&gt;标签🏷️是版本库的一个快照，跟某个commit绑定在一起&lt;/p&gt;

&lt;h2 id=&#34;创建标签&#34;&gt;创建标签&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git tag &amp;lt;tagname&amp;gt;&lt;/code&gt;用于新建一个标签，默认为&lt;code&gt;HEAD&lt;/code&gt; ，也可以通过 &lt;code&gt;git log&lt;/code&gt;找到你想加tag的 commit id&lt;/li&gt;
&lt;li&gt;指定标签信息:&lt;code&gt;git tag -a &amp;lt;tagname&amp;gt; -m &amp;quot;babalabala&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看所有标签:&lt;code&gt;git tag&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;操作标签&#34;&gt;操作标签&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;push本地的标签：&lt;code&gt;git push origin &amp;lt;tagname&amp;gt;&lt;/code&gt;or &lt;code&gt;git push origin --tags&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果标签已推送到远程，则先删除本地标签：&lt;code&gt;git tag -d &amp;lt;tagname&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;再删除远程标签：&lt;code&gt;git push origin :refs/tags/&amp;lt;tagname&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;github&#34;&gt;github&lt;/h1&gt;

&lt;p&gt;如果想参与一个开源项目比如bootstrp，点Fork就在自己的账号下克隆了一个bootstrap仓库，然后从自己的账号下clone&lt;code&gt;git clone git@github.com:KennaNing/bootstrap;.git&lt;/code&gt;，才能推送修改，否则没有权限。&lt;/p&gt;

&lt;h1 id=&#34;码云-gitee-com&#34;&gt;码云(gitee.com)&lt;/h1&gt;

&lt;p&gt;一个本地库如何既关联码云，又关联github呢？（add时给不同的远程库加上名字）&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git remote rm origin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote add github git@github.com:KennaNing/learngit.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote add gitee git@gitee.com:KennaNing/learngit.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote -v&lt;/code&gt;查看远程库的信息&lt;/li&gt;
&lt;li&gt;推送时：&lt;code&gt;git push github master&lt;/code&gt;or &lt;code&gt;git push gitee master&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;自定义git&#34;&gt;自定义git&lt;/h1&gt;

&lt;h2 id=&#34;忽略特殊文件-gitignore&#34;&gt;忽略特殊文件(.gitignore)&lt;/h2&gt;

&lt;h2 id=&#34;配置别名&#34;&gt;配置别名&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git config --global alias.st status&lt;/code&gt; &amp;amp; co,ci,br&lt;/li&gt;
&lt;li&gt;撤销修改是把暂存区的修改撤销掉（unstage），重新返回工作区，即是一个unstage操作，可以&lt;code&gt;git config --global alias.unstage reset HEAD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global alias.last log -1&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;搭建git-or-gitolite&#34;&gt;搭建git or Gitolite&lt;/h1&gt;

&lt;p&gt;目前用不到😄&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;用了一天时间学习git，弄懂了之前自己不懂git命令时，强行cp，ts，报错时却不知道为什么，学完后感觉常用到的也就add，commit，pull，push之类，其他的一些在最开始配置好就问题不大。
这是在搭建hugo个人网站后的第一篇笔记，可能我的主题跟已往学习的markdown语法稍有不同，也花了一些时间在尝试语法，总之，学到新东西，并且在自己搭的喜欢的blog下记录，很开心，很有成就感的吖！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://KennaNing.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://KennaNing.github.io/about/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>